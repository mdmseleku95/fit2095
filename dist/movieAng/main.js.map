{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addactor/addactor.component.css","webpack:///./src/app/addactor/addactor.component.html","webpack:///./src/app/addactor/addactor.component.ts","webpack:///./src/app/addmovie-toactor/addmovie-toactor.component.css","webpack:///./src/app/addmovie-toactor/addmovie-toactor.component.html","webpack:///./src/app/addmovie-toactor/addmovie-toactor.component.ts","webpack:///./src/app/addmovie/addmovie.component.css","webpack:///./src/app/addmovie/addmovie.component.html","webpack:///./src/app/addmovie/addmovie.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/database.service.ts","webpack:///./src/app/deleteactor/deleteactor.component.css","webpack:///./src/app/deleteactor/deleteactor.component.html","webpack:///./src/app/deleteactor/deleteactor.component.ts","webpack:///./src/app/deletemovie/deletemovie.component.css","webpack:///./src/app/deletemovie/deletemovie.component.html","webpack:///./src/app/deletemovie/deletemovie.component.ts","webpack:///./src/app/listactors/listactors.component.css","webpack:///./src/app/listactors/listactors.component.html","webpack:///./src/app/listactors/listactors.component.ts","webpack:///./src/app/listmovies/listmovies.component.css","webpack:///./src/app/listmovies/listmovies.component.html","webpack:///./src/app/listmovies/listmovies.component.ts","webpack:///./src/app/updateactor/updateactor.component.css","webpack:///./src/app/updateactor/updateactor.component.html","webpack:///./src/app/updateactor/updateactor.component.ts","webpack:///./src/app/updatemovie/updatemovie.component.css","webpack:///./src/app/updatemovie/updatemovie.component.html","webpack:///./src/app/updatemovie/updatemovie.component.ts","webpack:///./src/app/viewnotfound/viewnotfound.component.css","webpack:///./src/app/viewnotfound/viewnotfound.component.html","webpack:///./src/app/viewnotfound/viewnotfound.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"section\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"actorName\\\">Full Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"actorName\\\" [(ngModel)]=\\\"fullName\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"actorName\\\">Birth Year</label>\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"actorName\\\" [(ngModel)]=\\\"bYear\\\">\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSaveActor()\\\">Save Actor</button>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-addactor\",\n  templateUrl: \"./addactor.component.html\",\n  styleUrls: [\"./addactor.component.css\"],\n})\nexport class AddactorComponent {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.createActor(obj).subscribe(result => {\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n\n}","module.exports = \"\"","module.exports = \"<div class=\\\"section\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Title</th>\\n      <th>Year</th>\\n      <th>Select!</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of moviesDB\\\">\\n      <td>{{item.title}}</td>\\n      <td>{{item.year}}</td>\\n      <td><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSelectUpdate(item)\\\">Select Movie</button></td>\\n    </tr>\\n    <tr>\\n      <th>Name</th>\\n      <th>Birth Year</th>\\n      <th>Select!</th>\\n    </tr>\\n    <tr *ngFor=\\\"let itemA of actorsDB\\\">\\n      <td>{{itemA.name}}</td>\\n      <td>{{itemA.bYear}}</td>\\n      <td><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSelectActor(itemA)\\\">Select Actor</button></td>\\n    </tr>\\n  </table>\\n  <hr>\\n  <div *ngIf=\\\"moviesDB.length>0\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"movieName\\\">Movie Title</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"movieName\\\" [(ngModel)]=\\\"movietitle\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"actorName\\\">Actor Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"actorName\\\" [(ngModel)]=\\\"fullName\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateMovie()\\\">Update</button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from '../database.service';\n\n@Component({\n  selector: 'app-addmovie-toactor',\n  templateUrl: './addmovie-toactor.component.html',\n  styleUrls: ['./addmovie-toactor.component.css']\n})\nexport class AddmovieToactorComponent implements OnInit {\n  ngOnInit(): void {\n    this.onGetMovies();\n    this.onGetActors();\n    throw new Error(\"Method not implemented.\");\n  }\n  actorsDB: any[] = [];\n  moviesDB: any[] = [];\n  section = 1;\n  movietitle: string = \"\";\n  year: number = 0;\n  movieId: string = \"\";\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  constructor(private dbService: DatabaseService) {}\n  //Get all Movies\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n  onGetActors() {\n    console.log(\"From on GetActors\");\n\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  //Create a new Movie POST request\n  onSaveMovie() {\n    let obj = { title: this.movietitle, year: this.year };\n    this.dbService.createMovie(obj).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n  // Update a Movie\n  onSelectUpdate(item) {\n    this.movietitle = item.title;\n    this.year = item.year;\n    this.movieId = item._id;\n  }\n\n  onSelectActor(itemA) {\n    this.fullName = itemA.name;\n    this.bYear = itemA.bYear;\n    this.actorId = itemA._id;\n  }\n  onUpdateMovie() {\n    let obj = { \"id\":this.movieId };\n    this.dbService.addMovie(this.actorId, obj).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"section\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"movieName\\\">Movie Title</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"movieName\\\" [(ngModel)]=\\\"movietitle\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"movieYear\\\">Movie Year</label>\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"movieName\\\" [(ngModel)]=\\\"year\\\">\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSaveMovie()\\\">Save Movie</button>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-addmovie\",\n  templateUrl: \"./addmovie.component.html\",\n  styleUrls: [\"./addmovie.component.css\"],\n})\nexport class AddmovieComponent {\n  movietitle: string = \"\";\n  year: number = 0;\n  movieId: string = \"\";\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n\n  onSaveMovie() {\n    let obj = { title: this.movietitle, year: this.year };\n    this.dbService.createMovie(obj).subscribe(result => {\n      this.router.navigate([\"/listmovies\"]);\n    });\n  }\n\n}","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/listactors\\\" routerLinkActive=\\\"active\\\">List Actors </a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/listmovies\\\" routerLinkActive=\\\"active\\\">List Movies </a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/addactor\\\" routerLinkActive=\\\"active\\\">Add Actor </a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/addmovie\\\" routerLinkActive=\\\"active\\\">Add Movie </a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/updateactor\\\" routerLinkActive=\\\"active\\\">Update Actor</a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/addmovie-toactor\\\" routerLinkActive=\\\"active\\\">Add Movie To Actor</a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/deleteactor\\\" routerLinkActive=\\\"active\\\">Delete Actor</a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/deletemovie\\\" routerLinkActive=\\\"active\\\">Delete Movie</a>\\n        </li>\\n    </ul>\\n</nav>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'movieAng';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\nimport { DatabaseService } from \"./database.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ListactorsComponent } from \"./listactors/listactors.component\";\nimport { ListmoviesComponent } from \"./listmovies/listmovies.component\";\nimport { AddactorComponent } from \"./addactor/addactor.component\";\nimport { AddmovieComponent } from \"./addmovie/addmovie.component\";\nimport { DeleteactorComponent } from \"./deleteactor/deleteactor.component\";\nimport { DeletemovieComponent } from \"./deletemovie/deletemovie.component\";\nimport { UpdateactorComponent } from \"./updateactor/updateactor.component\";\nimport { UpdatemovieComponent } from \"./updatemovie/updatemovie.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AddmovieToactorComponent } from './addmovie-toactor/addmovie-toactor.component';\nimport { ViewnotfoundComponent } from './viewnotfound/viewnotfound.component';\n\nconst appRoutes: Routes = [\n  { path: \"listactors\", component: ListactorsComponent },\n  { path: \"listmovies\", component: ListmoviesComponent },\n  { path: \"addactor\", component: AddactorComponent },\n  { path: \"addmovie\", component: AddmovieComponent },\n  { path: \"updateactor\", component: UpdateactorComponent },\n  { path: \"updatemovie\", component: UpdatemovieComponent },\n  { path: \"deleteactor\", component: DeleteactorComponent },\n  { path: \"deletemovie\", component: DeletemovieComponent },\n  {path: \"addmovie-toactor\", component: AddmovieToactorComponent},\n  { path: \"\", redirectTo: \"/listactors\", pathMatch: \"full\" },\n  {path: \"**\", component: ViewnotfoundComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListactorsComponent,\n    ListmoviesComponent,\n    AddactorComponent,\n    AddmovieComponent,\n    UpdateactorComponent,\n    UpdatemovieComponent,\n    DeleteactorComponent,\n    DeletemovieComponent,\n    AddmovieToactorComponent,\n    ViewnotfoundComponent,\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatabaseService {\n  constructor(private http: HttpClient) {}\n  result: any;\n\n  getActors() {\n    return this.http.get(\"/actors\");\n  }\n  getActor(id: string) {\n    let url = \"/actors/\" + id;\n    return this.http.get(url);\n  }\n  createActor(data) {\n    return this.http.post(\"/actors\", data, httpOptions);\n  }\n  updateActor(id, data) {\n    let url = \"/actors/\" + id;\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteActor(id) {\n    let url = \"/actors/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n\n  getMovies() {\n    return this.http.get(\"/movies\");\n  }\n\n  getMovie(id: string) {\n    let url = \"/movies/\" + id;\n    return this.http.get(url);\n  }\n\n  createMovie(data) {\n    return this.http.post(\"/movies\", data, httpOptions);\n  }\n\n   updateMovie(id, data) {\n     let url = \"/movies/\" + id;\n     return this.http.put(url, data, httpOptions);\n  }\n\n  deleteMovie(id) {\n    let url = \"/movies/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n\n  addMovie(id, data) {\n    let url = \"/actors/\" + id + \"/movies\";\n    return this.http.post(url,data, httpOptions);\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"section\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Birth Year</th>\\n      <th>Delete?</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of actorsDB\\\">\\n      <td>{{item.name}}</td>\\n      <td>{{item.bYear}}</td>\\n      <td><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onDeleteActor(item)\\\">Delete</button></td>\\n    </tr>\\n  </table>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-deleteactor\",\n  templateUrl: \"./deleteactor.component.html\",\n  styleUrls: [\"./deleteactor.component.css\"],\n})\nexport class DeleteactorComponent implements OnInit {\n  private actorsDB: any[] = [];\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n\n  //Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n\n  // This callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetActors();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"section\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Movie Title</th>\\n      <th>Movie Year</th>\\n      <th>Delete?</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of moviesDB\\\">\\n      <td>{{item.title}}</td>\\n      <td>{{item.year}}</td>\\n      <td><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onDeleteMovie(item)\\\">Delete</button></td>\\n    </tr>\\n  </table>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-deletemovie\",\n  templateUrl: \"./deletemovie.component.html\",\n  styleUrls: [\"./deletemovie.component.css\"],\n})\nexport class DeletemovieComponent implements OnInit {\n  private moviesDB: any[] = [];\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Movies\n  onGetMovies() {\n    console.log(\"From on GetMovies\");\n\n    return this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n  //Delete Movie\n  onDeleteMovie(item) {\n    this.dbService.deleteMovie(item._id).subscribe(result => {\n      this.onGetMovies();\n      this.router.navigate([\"/listmovies\"]);\n    });\n  }\n\n  // This callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetMovies();\n  }\n}\n\n","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"section\\\"> -->\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Birth Year</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of actorsDB\\\">\\n      <td>{{item.name}}</td>\\n      <td>{{item.bYear}}</td>\\n    </tr>\\n  </table>\\n<!-- </div> -->\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: \"app-listactors\",\n  templateUrl: \"./listactors.component.html\",\n  styleUrls: [\"./listactors.component.css\"],\n})\nexport class ListactorsComponent implements OnInit {\n  private actorsDB: any[] = [];\n\n  constructor(private dbService: DatabaseService) {}\n\n  ngOnInit() {\n    console.log(\"Hi From ListActors ngIOnit\");\n\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"section\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Movie Title</th>\\n      <th>Movie Year</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of moviesDB\\\">\\n      <td>{{item.title}}</td>\\n      <td>{{item.year}}</td>\\n    </tr>\\n  </table>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: \"app-listmovies\",\n  templateUrl: \"./listmovies.component.html\",\n  styleUrls: [\"./listmovies.component.css\"],\n})\nexport class ListmoviesComponent implements OnInit {\n  private moviesDB: any[] = [];\n\n  constructor(private dbService: DatabaseService) {}\n\n  ngOnInit() {\n    console.log(\"Hi From ListMovies ngIOnit\");\n\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"section\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Birth Year</th>\\n      <th>Select!</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of actorsDB\\\">\\n      <td>{{item.name}}</td>\\n      <td>{{item.bYear}}</td>\\n      <td><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSelectUpdate(item)\\\">Update</button></td>\\n    </tr>\\n  </table>\\n  <hr>\\n  <div *ngIf=\\\"actorsDB.length>0\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"actorName\\\">Full Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"actorName\\\" [(ngModel)]=\\\"fullName\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"actorName\\\">Birth Year</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"actorName\\\" [(ngModel)]=\\\"bYear\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateActor()\\\">Update Actor</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-updateactor\",\n  templateUrl: \"./updateactor.component.html\",\n  styleUrls: [\"./updateactor.component.css\"],\n})\nexport class UpdateactorComponent implements OnInit {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n\n  private actorsDB: any[] = [];\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n\n  ngOnInit() {\n    this.onGetActors();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"section\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Movie Title</th>\\n      <th>Movie Year</th>\\n      <th>Select!</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of moviesDB\\\">\\n      <td>{{item.title}}</td>\\n      <td>{{item.year}}</td>\\n      <td><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSelectUpdate(item)\\\">Update</button></td>\\n    </tr>\\n  </table>\\n  <hr>\\n  <div *ngIf=\\\"moviesDB.length>0\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"movieName\\\">Movie Title</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"movieName\\\" [(ngModel)]=\\\"movietitle\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"movieName\\\">Movie Year</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"movieName\\\" [(ngModel)]=\\\"year\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateMovie()\\\">Update Movie</button>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-updatemovie\",\n  templateUrl: \"./updatemovie.component.html\",\n  styleUrls: [\"./updatemovie.component.css\"],\n})\nexport class UpdatemovieComponent implements OnInit {\n  title: string = \"\";\n  year: number = 0;\n  movieId: string = \"\";\n\n  private moviesDB: any[] = [];\n\n  constructor(private dbService: DatabaseService, private router: Router) {}\n\n  //Get all Movies\n  onGetMovies() {\n    console.log(\"From on GetMovies\");\n\n    return this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.title = item.title;\n    this.year = item.year;\n    this.movieId = item._id;\n  }\n  onUpdateMovies() {\n    let obj = { name: this.title, year: this.year };\n    this.dbService.updateMovie(this.movieId, obj).subscribe(result => {\n      this.onGetMovies();\n      this.router.navigate([\"/listmovies\"]);\n    });\n  }\n\n  ngOnInit() {\n    this.onGetMovies();\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>View Not Found</h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewnotfound',\n  templateUrl: './viewnotfound.component.html',\n  styleUrls: ['./viewnotfound.component.css']\n})\nexport class ViewnotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}